{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSessionSettings",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get general session management settings.",
                    "type": "SessionSettings"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateSessionSettings",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Session settings.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "SessionSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "General session management settings updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update general session management settings.",
                    "type": "SessionSettings"
                }
            ],
            "path": "/session/settings"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getGlobalPolicy",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get the global authentication session policy.",
                    "type": "GlobalAuthenticationSessionPolicy"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateGlobalPolicy",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Global authentication session policy.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "GlobalAuthenticationSessionPolicy"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Global authentication session policy updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update the global authentication session policy.",
                    "type": "GlobalAuthenticationSessionPolicy"
                }
            ],
            "path": "/session/authenticationSessionPolicies/global"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getApplicationPolicy",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get the application session policy.",
                    "type": "ApplicationSessionPolicy"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateApplicationPolicy",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Application session policy.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "ApplicationSessionPolicy"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Application session policy updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update the application session policy.",
                    "type": "ApplicationSessionPolicy"
                }
            ],
            "path": "/session/applicationSessionPolicy"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSourcePolicies",
                    "notes": "Get a list of all session policies that are associated with specific authentication sources.",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get list of session policies.",
                    "type": "AuthenticationSessionPolicies"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "createSourcePolicy",
                    "notes": "Create a new session policy for a specified authentication source. If the session policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Configuration for new policy.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "AuthenticationSessionPolicy"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Authentication session policy created."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Create a new session policy.",
                    "type": "AuthenticationSessionPolicy"
                }
            ],
            "path": "/session/authenticationSessionPolicies"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSourcePolicy",
                    "notes": "Get the session policy with the specified ID. A 404 status code is returned for nonexistent IDs.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the session policy to fetch.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Find session policy by ID.",
                    "type": "AuthenticationSessionPolicy"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateSourcePolicy",
                    "notes": "Update the session policy with the matching ID. If the policy is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the session policy to update.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Configuration for updated policy.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "AuthenticationSessionPolicy"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Authentication session policy updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update a session policy.",
                    "type": "AuthenticationSessionPolicy"
                },
                {
                    "method": "DELETE",
                    "nickname": "deleteSourcePolicy",
                    "notes": "Delete the session policy with the specified ID. A 404 status code is returned for nonexistent IDs. If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of session policy to delete.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Authentication session policy deleted."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        }
                    ],
                    "summary": "Delete a session policy.",
                    "type": "ApiResult"
                }
            ],
            "path": "/session/authenticationSessionPolicies/{id}"
        }
    ],
    "basePath": "https://ip-10-101-29-72:9999/pf-admin-api/v1",
    "models": {
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "ApplicationSessionPolicy": {
            "description": "Session controls for user facing PingFederate application endpoints, such as the profile management endpoint.",
            "id": "ApplicationSessionPolicy",
            "properties": {
                "idleTimeoutMins": {
                    "description": "The idle timeout period, in minutes. If set to -1, the idle timeout will be set to the maximum timeout. The default is 60.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxTimeoutMins": {
                    "description": "The maximum timeout period, in minutes. If set to -1, sessions do not expire. The default is 480.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AuthenticationSessionPolicies": {
            "description": "A collection of authentication session policies.",
            "id": "AuthenticationSessionPolicies",
            "properties": {
                "items": {
                    "description": "The actual list of policies.",
                    "items": {
                        "$ref": "AuthenticationSessionPolicy"
                    },
                    "type": "array"
                }
            }
        },
        "AuthenticationSessionPolicy": {
            "description": "The session policy for a specified authentication source.",
            "id": "AuthenticationSessionPolicy",
            "properties": {
                "authenticationSource": {
                    "$ref": "AuthenticationSource",
                    "description": "The authentication source this session policy applies to. This property cannot be changed after the policy is created."
                },
                "authnContextSensitive": {
                    "description": "Determines whether the requested authentication context is considered when deciding whether an existing session is valid for a given request. The default is false.",
                    "type": "boolean"
                },
                "enableSessions": {
                    "description": "Determines whether sessions are enabled for the authentication source. This value overrides the enableSessions value from the global authentication session policy.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The persistent, unique ID for the session policy. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                },
                "idleTimeoutMins": {
                    "description": "The idle timeout period, in minutes. If omitted, the value from the global authentication session policy will be used. If set to -1, the idle timeout will be set to the maximum timeout. If a value is provided for this property, a value must also be provided for maxTimeoutMins.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxTimeoutMins": {
                    "description": "The maximum timeout period, in minutes. If omitted, the value from the global authentication session policy will be used. If set to -1, sessions do not expire. If a value is provided for this property, a value must also be provided for idleTimeoutMins.",
                    "format": "int32",
                    "type": "integer"
                },
                "persistent": {
                    "description": "Determines whether sessions for the authentication source are persistent. This value overrides the persistentSessions value from the global authentication session policy. This field is ignored if enableSessions is false.",
                    "type": "boolean"
                },
                "timeoutDisplayUnit": {
                    "$ref": "SessionTimeUnit",
                    "description": "The display unit for session timeout periods in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout values in minutes must correspond to a whole number value for the specified unit.",
                    "enum": [
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                    ]
                }
            },
            "required": [
                "authenticationSource",
                "enableSessions"
            ]
        },
        "AuthenticationSource": {
            "description": "An authentication source (IdP adapter or IdP connection).",
            "id": "AuthenticationSource",
            "properties": {
                "sourceRef": {
                    "$ref": "ResourceLink",
                    "description": "A reference to the authentication source."
                },
                "type": {
                    "$ref": "AuthenticationSourceType",
                    "description": "The type of this authentication source.",
                    "enum": [
                        "IDP_ADAPTER",
                        "IDP_CONNECTION"
                    ]
                }
            },
            "required": [
                "type",
                "sourceRef"
            ]
        },
        "GlobalAuthenticationSessionPolicy": {
            "description": "The global policy for authentication sessions.",
            "id": "GlobalAuthenticationSessionPolicy",
            "properties": {
                "enableSessions": {
                    "description": "Determines whether authentication sessions are enabled globally.",
                    "type": "boolean"
                },
                "idleTimeoutDisplayUnit": {
                    "$ref": "SessionTimeUnit",
                    "description": "The display unit for the idle timeout period in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout value in minutes must correspond to a whole number value for the specified unit.",
                    "enum": [
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                    ]
                },
                "idleTimeoutMins": {
                    "description": "The idle timeout period, in minutes. If set to -1, the idle timeout will be set to the maximum timeout. The default is 60.",
                    "format": "int32",
                    "type": "integer"
                },
                "maxTimeoutDisplayUnit": {
                    "$ref": "SessionTimeUnit",
                    "description": "The display unit for the maximum timeout period in the PingFederate administrative console. When the display unit is HOURS or DAYS, the timeout value in minutes must correspond to a whole number value for the specified unit.",
                    "enum": [
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                    ]
                },
                "maxTimeoutMins": {
                    "description": "The maximum timeout period, in minutes. If set to -1, sessions do not expire. The default is 480.",
                    "format": "int32",
                    "type": "integer"
                },
                "persistentSessions": {
                    "description": "Determines whether authentication sessions are persistent by default. Persistent sessions are linked to a persistent cookie and stored in a data store. This field is ignored if enableSessions is false.",
                    "type": "boolean"
                }
            },
            "required": [
                "enableSessions"
            ]
        },
        "ResourceLink": {
            "description": "A reference to a resource.",
            "id": "ResourceLink",
            "properties": {
                "id": {
                    "description": "The ID of the resource.",
                    "type": "string"
                },
                "location": {
                    "description": "A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "SessionSettings": {
            "description": "General settings related to session management.",
            "id": "SessionSettings",
            "properties": {
                "revokeUserSessionOnLogout": {
                    "description": "Determines whether the user's session is revoked on logout. If this property is not provided on a PUT, the setting is left unchanged.",
                    "type": "boolean"
                },
                "sessionRevocationLifetime": {
                    "description": "How long a session revocation is tracked and stored, in minutes. If this property is not provided on a PUT, the setting is left unchanged.",
                    "format": "int32",
                    "type": "integer"
                },
                "trackAdapterSessionsForLogout": {
                    "description": "Determines whether adapter sessions are tracked for cleanup during single logout. The default is false.",
                    "type": "boolean"
                }
            }
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/session",
    "swaggerVersion": "1.2"
}