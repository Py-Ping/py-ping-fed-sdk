{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSettings",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get the authentication policies settings.",
                    "type": "AuthenticationPoliciesSettings"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateSettings",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Authentication policies settings.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "AuthenticationPoliciesSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Settings updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Set the authentication policies settings.",
                    "type": "AuthenticationPoliciesSettings"
                }
            ],
            "path": "/authenticationPolicies/settings"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getDefaultAuthenticationPolicy",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        }
                    ],
                    "summary": "Get the default configured authentication policy.",
                    "type": "AuthenticationPolicy"
                },
                {
                    "method": "PUT",
                    "nickname": "updateDefaultAuthenticationPolicy",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Default authentication policy.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "AuthenticationPolicy"
                        },
                        {
                            "allowMultiple": false,
                            "defaultValue": "false",
                            "description": "External validation will be bypassed when set to true. Default to false.",
                            "name": "X-BypassExternalValidation",
                            "paramType": "header",
                            "required": false,
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Default authentication policy updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "PingFederate does not have the appropriate IdP/SP role enabled. Operation not available."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Set the default authentication policy.",
                    "type": "AuthenticationPolicy"
                }
            ],
            "path": "/authenticationPolicies/default"
        }
    ],
    "basePath": "https://localhost:9999/pf-admin-api/v1",
    "models": {
        "ApcMappingPolicyAction": {
            "description": "An authentication policy contract selection action.",
            "extends": "PolicyAction",
            "id": "ApcMappingPolicyAction",
            "properties": {
                "attributeMapping": {
                    "$ref": "AttributeMapping",
                    "description": "Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores."
                },
                "authenticationPolicyContractRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated authentication policy contract."
                },
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type",
                "authenticationPolicyContractRef",
                "attributeMapping"
            ]
        },
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "AttributeFulfillmentValue": {
            "description": "Defines how an attribute in an attribute contract should be populated.",
            "id": "AttributeFulfillmentValue",
            "properties": {
                "source": {
                    "$ref": "SourceTypeIdKey",
                    "description": "The attribute value source."
                },
                "value": {
                    "description": "The value for this attribute.",
                    "type": "string"
                }
            },
            "required": [
                "source",
                "value"
            ]
        },
        "AttributeMapping": {
            "description": "A list of mappings from attribute sources to attribute targets.",
            "id": "AttributeMapping",
            "properties": {
                "attributeContractFulfillment": {
                    "$ref": "Map[string,AttributeFulfillmentValue]",
                    "description": "A list of mappings from attribute names to their fulfillment values."
                },
                "attributeSources": {
                    "description": "A list of configured data stores to look up attributes from.",
                    "items": {
                        "$ref": "AttributeSource"
                    },
                    "type": "array"
                },
                "issuanceCriteria": {
                    "$ref": "IssuanceCriteria",
                    "description": "The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled."
                }
            },
            "required": [
                "attributeContractFulfillment"
            ]
        },
        "AttributeRule": {
            "description": "Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.",
            "id": "AttributeRule",
            "properties": {
                "attributeName": {
                    "description": "The name of the attribute to use in this attribute rule.",
                    "type": "string"
                },
                "condition": {
                    "$ref": "ConditionType",
                    "description": "The condition that will be applied to the attribute's expected value.",
                    "enum": [
                        "EQUALS",
                        "EQUALS_CASE_INSENSITIVE",
                        "EQUALS_DN",
                        "NOT_EQUAL",
                        "NOT_EQUAL_CASE_INSENSITIVE",
                        "NOT_EQUAL_DN",
                        "MULTIVALUE_CONTAINS",
                        "MULTIVALUE_CONTAINS_CASE_INSENSITIVE",
                        "MULTIVALUE_CONTAINS_DN",
                        "MULTIVALUE_DOES_NOT_CONTAIN",
                        "MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE",
                        "MULTIVALUE_DOES_NOT_CONTAIN_DN"
                    ]
                },
                "expectedValue": {
                    "description": "The expected value of this attribute rule.",
                    "type": "string"
                },
                "result": {
                    "description": "The result of this attribute rule.",
                    "type": "string"
                }
            },
            "required": [
                "attributeName",
                "condition",
                "expectedValue",
                "result"
            ]
        },
        "AttributeRules": {
            "description": "A collection of attribute rules",
            "id": "AttributeRules",
            "properties": {
                "fallbackToSuccess": {
                    "description": "When all the rules fail, you may choose to default to the general success action or fail. Default to success.",
                    "type": "boolean"
                },
                "items": {
                    "description": "The actual list of attribute rules.",
                    "items": {
                        "$ref": "AttributeRule"
                    },
                    "type": "array"
                }
            }
        },
        "AttributeSource": {
            "description": "The configured settings to look up attributes from an associated data store.",
            "discriminator": "type",
            "id": "AttributeSource",
            "properties": {
                "attributeContractFulfillment": {
                    "$ref": "Map[string,AttributeFulfillmentValue]",
                    "description": "A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings"
                },
                "dataStoreRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated data store."
                },
                "description": {
                    "description": "The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings",
                    "type": "string"
                },
                "id": {
                    "description": "The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.",
                    "type": "string"
                },
                "type": {
                    "$ref": "DataStoreType",
                    "description": "The data store type of this attribute source.",
                    "enum": [
                        "LDAP",
                        "JDBC",
                        "CUSTOM"
                    ]
                }
            },
            "required": [
                "type",
                "dataStoreRef"
            ],
            "subTypes": [
                "LdapAttributeSource",
                "CustomAttributeSource",
                "JdbcAttributeSource"
            ]
        },
        "AuthenticationPoliciesSettings": {
            "description": "The settings for the authentication policies.",
            "id": "AuthenticationPoliciesSettings",
            "properties": {
                "enableIdpAuthnSelection": {
                    "description": "Enable IdP authentication policies.",
                    "type": "boolean"
                },
                "enableSpAuthnSelection": {
                    "description": "Enable SP authentication policies.",
                    "type": "boolean"
                }
            }
        },
        "AuthenticationPolicy": {
            "description": "An authentication policy.",
            "id": "AuthenticationPolicy",
            "properties": {
                "authnSelectionTrees": {
                    "description": "The list of authentication policy trees.",
                    "items": {
                        "$ref": "AuthenticationPolicyTree"
                    },
                    "type": "array"
                },
                "defaultAuthenticationSources": {
                    "description": "The default authentication sources.",
                    "items": {
                        "$ref": "AuthenticationSource"
                    },
                    "type": "array"
                },
                "failIfNoSelection": {
                    "description": "Fail if policy finds no authentication source.",
                    "type": "boolean"
                },
                "trackedHttpParameters": {
                    "description": "The HTTP request parameters to track and make available to authentication sources, selectors, and contract mappings throughout the authentication policy.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "AuthenticationPolicyTree": {
            "description": "An authentication policy tree.",
            "id": "AuthenticationPolicyTree",
            "properties": {
                "authenticationApiApplicationRef": {
                    "$ref": "ResourceLink",
                    "description": "Authentication API Application Id to be used in this policy branch. If the value is not specified, no Authentication API Application will be used."
                },
                "description": {
                    "description": "A description for the authentication policy.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether or not this authentication policy tree is enabled. Default is true.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The authentication policy name. Name is unique.",
                    "type": "string"
                },
                "rootNode": {
                    "$ref": "AuthenticationPolicyTreeNode",
                    "description": "A node inside the authentication policy tree."
                }
            }
        },
        "AuthenticationPolicyTreeNode": {
            "description": "An authentication policy tree node.",
            "id": "AuthenticationPolicyTreeNode",
            "properties": {
                "action": {
                    "$ref": "PolicyAction",
                    "description": "The result action."
                },
                "children": {
                    "description": "The nodes inside the authentication policy tree node.",
                    "items": {
                        "$ref": "AuthenticationPolicyTreeNode"
                    },
                    "type": "array"
                }
            },
            "required": [
                "action"
            ]
        },
        "AuthenticationSource": {
            "description": "An authentication source (IdP adapter or IdP connection).",
            "id": "AuthenticationSource",
            "properties": {
                "sourceRef": {
                    "$ref": "ResourceLink",
                    "description": "A reference to the authentication source."
                },
                "type": {
                    "$ref": "AuthenticationSourceType",
                    "description": "The type of this authentication source.",
                    "enum": [
                        "IDP_ADAPTER",
                        "IDP_CONNECTION"
                    ]
                }
            },
            "required": [
                "type",
                "sourceRef"
            ]
        },
        "AuthnSelectorPolicyAction": {
            "description": "An authentication selector selection action.",
            "extends": "PolicyAction",
            "id": "AuthnSelectorPolicyAction",
            "properties": {
                "authenticationSelectorRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated authentication selector."
                },
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type",
                "authenticationSelectorRef"
            ]
        },
        "AuthnSourcePolicyAction": {
            "description": "An authentication source selection action.",
            "extends": "PolicyAction",
            "id": "AuthnSourcePolicyAction",
            "properties": {
                "attributeRules": {
                    "$ref": "AttributeRules",
                    "description": "The authentication policy rules."
                },
                "authenticationSource": {
                    "$ref": "AuthenticationSource",
                    "description": "The associated authentication source."
                },
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "inputUserIdMapping": {
                    "$ref": "AttributeFulfillmentValue",
                    "description": "The input user id mapping."
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type",
                "authenticationSource"
            ]
        },
        "BinaryLdapAttributeSettings": {
            "description": "Binary settings for a LDAP attribute.",
            "id": "BinaryLdapAttributeSettings",
            "properties": {
                "binaryEncoding": {
                    "$ref": "LdapAttrEncodingType",
                    "description": "Get the encoding type for this attribute. If not specified, the default is BASE64.",
                    "enum": [
                        "BASE64",
                        "HEX",
                        "SID"
                    ]
                }
            }
        },
        "ConditionalIssuanceCriteriaEntry": {
            "description": "An issuance criterion that checks a source attribute against a particular condition and the expected value. If the condition is true then this issuance criterion passes, otherwise the criterion fails.",
            "id": "ConditionalIssuanceCriteriaEntry",
            "properties": {
                "attributeName": {
                    "description": "The name of the attribute to use in this issuance criterion.",
                    "type": "string"
                },
                "condition": {
                    "$ref": "ConditionType",
                    "description": "The condition that will be applied to the source attribute's value and the expected value.",
                    "enum": [
                        "EQUALS",
                        "EQUALS_CASE_INSENSITIVE",
                        "EQUALS_DN",
                        "NOT_EQUAL",
                        "NOT_EQUAL_CASE_INSENSITIVE",
                        "NOT_EQUAL_DN",
                        "MULTIVALUE_CONTAINS",
                        "MULTIVALUE_CONTAINS_CASE_INSENSITIVE",
                        "MULTIVALUE_CONTAINS_DN",
                        "MULTIVALUE_DOES_NOT_CONTAIN",
                        "MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE",
                        "MULTIVALUE_DOES_NOT_CONTAIN_DN"
                    ]
                },
                "errorResult": {
                    "description": "The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.",
                    "type": "string"
                },
                "source": {
                    "$ref": "SourceTypeIdKey",
                    "description": "The source of the attribute."
                },
                "value": {
                    "description": "The expected value of this issuance criterion.",
                    "type": "string"
                }
            },
            "required": [
                "source",
                "attributeName",
                "condition",
                "value"
            ]
        },
        "ContinuePolicyAction": {
            "description": "The continue selection action.",
            "extends": "PolicyAction",
            "id": "ContinuePolicyAction",
            "properties": {
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "CustomAttributeSource": {
            "description": "The configured settings used to look up attributes from a custom data store.",
            "extends": "AttributeSource",
            "id": "CustomAttributeSource",
            "properties": {
                "attributeContractFulfillment": {
                    "$ref": "Map[string,AttributeFulfillmentValue]",
                    "description": "A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings"
                },
                "dataStoreRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated data store."
                },
                "description": {
                    "description": "The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings",
                    "type": "string"
                },
                "filterFields": {
                    "description": "The list of fields that can be used to filter a request to the custom data store.",
                    "items": {
                        "$ref": "FieldEntry"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.",
                    "type": "string"
                },
                "type": {
                    "$ref": "DataStoreType",
                    "description": "The data store type of this attribute source.",
                    "enum": [
                        "LDAP",
                        "JDBC",
                        "CUSTOM"
                    ]
                }
            },
            "required": [
                "type",
                "dataStoreRef"
            ]
        },
        "DonePolicyAction": {
            "description": "The done selection action.",
            "extends": "PolicyAction",
            "id": "DonePolicyAction",
            "properties": {
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "ExpressionIssuanceCriteriaEntry": {
            "description": "An issuance criterion that uses a Boolean return value from an OGNL expression to determine whether or not it passes.",
            "id": "ExpressionIssuanceCriteriaEntry",
            "properties": {
                "errorResult": {
                    "description": "The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.",
                    "type": "string"
                },
                "expression": {
                    "description": "The OGNL expression to evaluate.",
                    "type": "string"
                }
            },
            "required": [
                "expression"
            ]
        },
        "FieldEntry": {
            "description": "A simple name value pair to represent a field entry.",
            "id": "FieldEntry",
            "properties": {
                "name": {
                    "description": "The name of this field.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of this field. Whether or not the value is required will be determined by plugin validation checks.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "IssuanceCriteria": {
            "description": "A list of criteria that determines whether a transaction (usually a SSO transaction) is continued. All criteria must pass in order for the transaction to continue.",
            "id": "IssuanceCriteria",
            "properties": {
                "conditionalCriteria": {
                    "description": "A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.",
                    "items": {
                        "$ref": "ConditionalIssuanceCriteriaEntry"
                    },
                    "type": "array"
                },
                "expressionCriteria": {
                    "description": "A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.",
                    "items": {
                        "$ref": "ExpressionIssuanceCriteriaEntry"
                    },
                    "type": "array"
                }
            }
        },
        "JdbcAttributeSource": {
            "description": "The configured settings used to look up attributes from a JDBC data store.",
            "extends": "AttributeSource",
            "id": "JdbcAttributeSource",
            "properties": {
                "attributeContractFulfillment": {
                    "$ref": "Map[string,AttributeFulfillmentValue]",
                    "description": "A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings"
                },
                "dataStoreRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated data store."
                },
                "description": {
                    "description": "The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings",
                    "type": "string"
                },
                "filter": {
                    "description": "The JDBC WHERE clause used to query your data store to locate a user record.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.",
                    "type": "string"
                },
                "schema": {
                    "description": "Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.",
                    "type": "string"
                },
                "table": {
                    "description": "The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.",
                    "type": "string"
                },
                "type": {
                    "$ref": "DataStoreType",
                    "description": "The data store type of this attribute source.",
                    "enum": [
                        "LDAP",
                        "JDBC",
                        "CUSTOM"
                    ]
                }
            },
            "required": [
                "type",
                "dataStoreRef",
                "table",
                "filter"
            ]
        },
        "LdapAttributeSource": {
            "description": "The configured settings used to look up attributes from a LDAP data store.",
            "extends": "AttributeSource",
            "id": "LdapAttributeSource",
            "properties": {
                "attributeContractFulfillment": {
                    "$ref": "Map[string,AttributeFulfillmentValue]",
                    "description": "A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings"
                },
                "baseDn": {
                    "description": "The base DN to search from. If not specified, the search will start at the LDAP's root.",
                    "type": "string"
                },
                "binaryAttributeSettings": {
                    "$ref": "Map[string,BinaryLdapAttributeSettings]",
                    "description": "The advanced settings for binary LDAP attributes."
                },
                "dataStoreRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated data store."
                },
                "description": {
                    "description": "The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings",
                    "type": "string"
                },
                "id": {
                    "description": "The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.",
                    "type": "string"
                },
                "memberOfNestedGroup": {
                    "description": "Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.",
                    "type": "boolean"
                },
                "searchFilter": {
                    "description": "The LDAP filter that will be used to lookup the objects from the directory.",
                    "type": "string"
                },
                "searchScope": {
                    "$ref": "LdapSearchScope",
                    "description": "Determines the node depth of the query.",
                    "enum": [
                        "OBJECT",
                        "ONE_LEVEL",
                        "SUBTREE"
                    ]
                },
                "type": {
                    "$ref": "DataStoreType",
                    "description": "The data store type of this attribute source.",
                    "enum": [
                        "LDAP",
                        "JDBC",
                        "CUSTOM"
                    ]
                }
            },
            "required": [
                "type",
                "dataStoreRef",
                "searchScope",
                "searchFilter"
            ]
        },
        "LocalIdentityMappingPolicyAction": {
            "description": "A local identity profile selection action.",
            "extends": "PolicyAction",
            "id": "LocalIdentityMappingPolicyAction",
            "properties": {
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "inboundMapping": {
                    "$ref": "AttributeMapping",
                    "description": "Inbound mappings into the local identity profile fields."
                },
                "localIdentityRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the associated local identity profile."
                },
                "outboundAttributeMapping": {
                    "$ref": "AttributeMapping",
                    "description": "Authentication policy contract mappings associated with this local Identity profile."
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type",
                "localIdentityRef",
                "outboundAttributeMapping"
            ]
        },
        "PolicyAction": {
            "description": "An authentication policy selection action.",
            "discriminator": "type",
            "id": "PolicyAction",
            "properties": {
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type"
            ],
            "subTypes": [
                "ApcMappingPolicyAction",
                "LocalIdentityMappingPolicyAction",
                "AuthnSelectorPolicyAction",
                "AuthnSourcePolicyAction",
                "ContinuePolicyAction",
                "RestartPolicyAction",
                "DonePolicyAction"
            ]
        },
        "ResourceLink": {
            "description": "A reference to a resource.",
            "id": "ResourceLink",
            "properties": {
                "id": {
                    "description": "The ID of the resource.",
                    "type": "string"
                },
                "location": {
                    "description": "A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "RestartPolicyAction": {
            "description": "The restart selection action.",
            "extends": "PolicyAction",
            "id": "RestartPolicyAction",
            "properties": {
                "context": {
                    "description": "The result context.",
                    "type": "string"
                },
                "type": {
                    "$ref": "AuthenticationPolicySelectionActionType",
                    "description": "The authentication selection type.",
                    "enum": [
                        "APC_MAPPING",
                        "LOCAL_IDENTITY_MAPPING",
                        "AUTHN_SELECTOR",
                        "AUTHN_SOURCE",
                        "DONE",
                        "CONTINUE",
                        "RESTART"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "SourceTypeIdKey": {
            "description": "A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime']<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.",
            "id": "SourceTypeIdKey",
            "properties": {
                "id": {
                    "description": "The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.",
                    "type": "string"
                },
                "type": {
                    "$ref": "SourceType",
                    "description": "The source type of this key.",
                    "enum": [
                        "TOKEN_EXCHANGE_PROCESSOR_POLICY",
                        "ACCOUNT_LINK",
                        "ADAPTER",
                        "ASSERTION",
                        "CONTEXT",
                        "CUSTOM_DATA_STORE",
                        "EXPRESSION",
                        "JDBC_DATA_STORE",
                        "LDAP_DATA_STORE",
                        "MAPPED_ATTRIBUTES",
                        "NO_MAPPING",
                        "TEXT",
                        "TOKEN",
                        "REQUEST",
                        "OAUTH_PERSISTENT_GRANT",
                        "SUBJECT_TOKEN",
                        "ACTOR_TOKEN",
                        "PASSWORD_CREDENTIAL_VALIDATOR",
                        "IDP_CONNECTION",
                        "AUTHENTICATION_POLICY_CONTRACT",
                        "CLAIMS",
                        "LOCAL_IDENTITY_PROFILE",
                        "EXTENDED_CLIENT_METADATA",
                        "EXTENDED_PROPERTIES",
                        "TRACKED_HTTP_PARAMS"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/authenticationPolicies",
    "swaggerVersion": "1.2"
}