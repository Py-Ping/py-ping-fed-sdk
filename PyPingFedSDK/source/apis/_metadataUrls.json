{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getMetadataUrls",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get a list of Metadata URLs",
                    "type": "MetadataUrls"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "addMetadataUrl",
                    "notes": "Add a new Metadata URL. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Configuration for a new Metadata URL.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "MetadataUrl"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Metadata URL added."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Add a new Metadata URL.",
                    "type": "MetadataUrl"
                }
            ],
            "path": "/metadataUrls"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getMetadataUrl",
                    "notes": "Get a Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of Metadata URL to fetch",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Get a Metadata URL by ID.",
                    "type": "MetadataUrl"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateMetadataUrl",
                    "notes": "Update a Metadata URL by ID. If the Metadata URL is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the Metadata URL to update.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Configuration for the Metadata URL.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "MetadataUrl"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Metadata URL updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update a Metadata URL by ID.",
                    "type": "MetadataUrl"
                },
                {
                    "method": "DELETE",
                    "nickname": "deleteMetadataUrl",
                    "notes": "Delete Metadata URL with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of Metadata URL to delete.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Metadata URL deleted."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        },
                        {
                            "code": 422,
                            "message": "Resource is in use and cannot be deleted.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Delete a Metadata URL by ID.",
                    "type": "ApiResult"
                }
            ],
            "path": "/metadataUrls/{id}"
        }
    ],
    "basePath": "https://localhost:9999/pf-admin-api/v1",
    "models": {
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "CertView": {
            "description": "Certificate details.",
            "id": "CertView",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "expires": {
                    "description": "The end date up until which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate.",
                    "type": "string"
                },
                "issuerDN": {
                    "description": "The issuer's distinguished name.",
                    "type": "string"
                },
                "keyAlgorithm": {
                    "description": "The public key algorithm.",
                    "type": "string"
                },
                "keySize": {
                    "description": "The public key size.",
                    "format": "int32",
                    "type": "integer"
                },
                "serialNumber": {
                    "description": "The serial number assigned by the CA.",
                    "type": "string"
                },
                "sha1Fingerprint": {
                    "description": "SHA-1 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "sha256Fingerprint": {
                    "description": "SHA-256 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "description": "The signature algorithm.",
                    "type": "string"
                },
                "status": {
                    "$ref": "CertificateValidity",
                    "description": "Status of the item.",
                    "enum": [
                        "VALID",
                        "EXPIRED",
                        "NOT_YET_VALID",
                        "REVOKED"
                    ]
                },
                "subjectAlternativeNames": {
                    "description": "The subject alternative names (SAN).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subjectDN": {
                    "description": "The subject's distinguished name.",
                    "type": "string"
                },
                "validFrom": {
                    "description": "The start date from which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The X.509 version to which the item conforms.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MetadataUrl": {
            "description": "Metadata URL and corresponding Signature Verification Certificate.",
            "id": "MetadataUrl",
            "properties": {
                "certView": {
                    "$ref": "CertView",
                    "description": "The Signature Verification Certificate details. This property is read-only and is always ignored on a POST or PUT."
                },
                "id": {
                    "description": "The persistent, unique ID for the Metadata Url. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                },
                "name": {
                    "description": "The name for the Metadata URL.",
                    "type": "string"
                },
                "url": {
                    "description": "The Metadata URL.",
                    "type": "string"
                },
                "validateSignature": {
                    "description": "Perform Metadata Signature Validation. The default value is TRUE.",
                    "type": "boolean"
                },
                "x509File": {
                    "$ref": "X509File",
                    "description": "Data of the Signature Verification Certificate for the Metadata URL."
                }
            },
            "required": [
                "name",
                "url"
            ]
        },
        "MetadataUrls": {
            "id": "MetadataUrls",
            "properties": {
                "items": {
                    "description": "The list of Metadata URL items.",
                    "items": {
                        "$ref": "MetadataUrl"
                    },
                    "type": "array"
                }
            }
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        },
        "X509File": {
            "description": "Encoded certificate data.",
            "id": "X509File",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "fileData": {
                    "description": "The certificate data in PEM format. New line characters should be omitted or encoded in this value.",
                    "type": "string"
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                }
            },
            "required": [
                "fileData"
            ]
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/metadataUrls",
    "swaggerVersion": "1.2"
}