{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getRevocationSettings",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get certificate revocation settings.",
                    "type": "CertificateRevocationSettings"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateRevocationSettings",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Certificate revocation settings.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "CertificateRevocationSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Certificate revocation settings updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update certificate revocation settings.",
                    "type": "CertificateRevocationSettings"
                }
            ],
            "path": "/certificates/revocation/settings"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getOcspCertificates",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get the list of available OCSP responder signature verification certificates.",
                    "type": "CertViews"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "importOcspCertificate",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "File to import.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "X509File"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "OCSP responder signature verification certificate imported."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Import an OCSP responder signature verification certificate.",
                    "type": "CertView"
                }
            ],
            "path": "/certificates/revocation/ocspCertificates"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getOcspCertificateById",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Certificate ID.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Get an OCSP responder signature verification certificate by ID.",
                    "type": "CertView"
                },
                {
                    "method": "DELETE",
                    "nickname": "deleteOcspCertificateById",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Certificate ID.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "OCSP responder signature verification certificate deleted."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Resource is in use and cannot be deleted."
                        }
                    ],
                    "summary": "Delete an OCSP responder signature verification certificate by ID.",
                    "type": "ApiResult"
                }
            ],
            "path": "/certificates/revocation/ocspCertificates/{id}"
        }
    ],
    "basePath": "https://ip-10-101-29-72:9999/pf-admin-api/v1",
    "models": {
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "CertView": {
            "description": "Certificate details.",
            "id": "CertView",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "expires": {
                    "description": "The end date up until which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate.",
                    "type": "string"
                },
                "issuerDN": {
                    "description": "The issuer's distinguished name.",
                    "type": "string"
                },
                "keyAlgorithm": {
                    "description": "The public key algorithm.",
                    "type": "string"
                },
                "keySize": {
                    "description": "The public key size.",
                    "format": "int32",
                    "type": "integer"
                },
                "serialNumber": {
                    "description": "The serial number assigned by the CA.",
                    "type": "string"
                },
                "sha1Fingerprint": {
                    "description": "SHA-1 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "sha256Fingerprint": {
                    "description": "SHA-256 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "description": "The signature algorithm.",
                    "type": "string"
                },
                "status": {
                    "$ref": "CertificateValidity",
                    "description": "Status of the item.",
                    "enum": [
                        "VALID",
                        "EXPIRED",
                        "NOT_YET_VALID",
                        "REVOKED"
                    ]
                },
                "subjectAlternativeNames": {
                    "description": "The subject alternative names (SAN).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subjectDN": {
                    "description": "The subject's distinguished name.",
                    "type": "string"
                },
                "validFrom": {
                    "description": "The start date from which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The X.509 version to which the item conforms.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CertViews": {
            "description": "A collection of Certificate items.",
            "id": "CertViews",
            "properties": {
                "items": {
                    "description": "The actual list of certificate instances.",
                    "items": {
                        "$ref": "CertView"
                    },
                    "type": "array"
                }
            }
        },
        "CertificateRevocationSettings": {
            "description": "Certificate revocation settings.",
            "id": "CertificateRevocationSettings",
            "properties": {
                "crlSettings": {
                    "$ref": "CrlSettings",
                    "description": "Certificate revocation CRL settings. CRL revocation is enabled by default. It will be disabled if this attribute is not defined in the request body."
                },
                "ocspSettings": {
                    "$ref": "OcspSettings",
                    "description": "Certificate revocation OCSP settings. OCSP revocation is disabled by default. It will be enabled if this attribute is defined in the request body."
                },
                "proxySettings": {
                    "$ref": "ProxySettings",
                    "description": "If OCSP messaging is routed through a proxy server, specify the server's host (DNS name or IP address) and the port number. The same proxy information applies to CRL checking, when CRL is enabled for failover."
                }
            }
        },
        "CrlSettings": {
            "description": "CRL settings.",
            "id": "CrlSettings",
            "properties": {
                "nextRetryMinsWhenNextUpdateInPast": {
                    "description": "Next retry on next update expiration in minutes. This value defaults to \"60\".",
                    "format": "int32",
                    "type": "integer"
                },
                "nextRetryMinsWhenResolveFailed": {
                    "description": "Next retry on resolution failure in minutes. This value defaults to \"1440\".",
                    "format": "int32",
                    "type": "integer"
                },
                "treatNonRetrievableCrlAsRevoked": {
                    "description": "Treat non retrievable CRL as revoked. This setting defaults to disabled.",
                    "type": "boolean"
                },
                "verifyCrlSignature": {
                    "description": "Verify CRL signature. This setting defaults to enabled.",
                    "type": "boolean"
                }
            }
        },
        "OcspSettings": {
            "description": "OCSP settings.",
            "id": "OcspSettings",
            "properties": {
                "actionOnResponderUnavailable": {
                    "description": "Action on responder unavailable. This value defaults to  \"CONTINUE\".",
                    "type": "string"
                },
                "actionOnStatusUnknown": {
                    "description": "Action on status unknown. This value defaults to  \"FAIL\".",
                    "type": "string"
                },
                "actionOnUnsuccessfulResponse": {
                    "description": "Action on unsuccessful response. This value defaults to  \"FAIL\".",
                    "type": "string"
                },
                "currentUpdateGracePeriod": {
                    "description": "Current update grace period in minutes. This value defaults to \"5\".",
                    "format": "int32",
                    "type": "integer"
                },
                "nextUpdateGracePeriod": {
                    "description": "Next update grace period in minutes. This value defaults to \"5\".",
                    "format": "int32",
                    "type": "integer"
                },
                "requesterAddNonce": {
                    "description": "Do not allow responder to use cached responses. This setting defaults to disabled.",
                    "type": "boolean"
                },
                "responderCertReference": {
                    "$ref": "ResourceLink",
                    "description": "Resource link to OCSP responder signature verification certificate. A previously selected certificate will be deselected if this attribute is not defined."
                },
                "responderTimeout": {
                    "description": "Responder connection timeout in seconds. This value defaults to \"5\".",
                    "format": "int32",
                    "type": "integer"
                },
                "responderUrl": {
                    "description": "Responder URL address. This field is required if OCSP revocation is enabled.",
                    "type": "string"
                },
                "responseCachePeriod": {
                    "description": "Response cache period in hours. This value defaults to \"48\".",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "responderUrl"
            ]
        },
        "ProxySettings": {
            "description": "Proxy settings.",
            "id": "ProxySettings",
            "properties": {
                "host": {
                    "description": "Host name.",
                    "type": "string"
                },
                "port": {
                    "description": "Port number.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ResourceLink": {
            "description": "A reference to a resource.",
            "id": "ResourceLink",
            "properties": {
                "id": {
                    "description": "The ID of the resource.",
                    "type": "string"
                },
                "location": {
                    "description": "A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        },
        "X509File": {
            "description": "Encoded certificate data.",
            "id": "X509File",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "fileData": {
                    "description": "The certificate data in PEM format. New line characters should be omitted or encoded in this value.",
                    "type": "string"
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                }
            },
            "required": [
                "fileData"
            ]
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/certificates/revocation",
    "swaggerVersion": "1.2"
}