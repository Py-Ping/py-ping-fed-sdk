{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getKeyPairs",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get list of key pairs.",
                    "type": "KeyPairViews"
                }
            ],
            "path": "/keyPairs/sslServer"
        },
        {
            "operations": [
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "importKeyPair",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "File to import.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "KeyPairFile"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Key Pair imported."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "The operation is not permitted, based on the current configuration of the server."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Import a new key pair.",
                    "type": "KeyPairView"
                }
            ],
            "path": "/keyPairs/sslServer/import"
        },
        {
            "operations": [
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "createKeyPair",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Settings for the new key pair.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "NewKeyPairSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Key Pair created."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Generate a new key pair.",
                    "type": "KeyPairView"
                }
            ],
            "path": "/keyPairs/sslServer/generate"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getKeyPair",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair to retrieve.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        }
                    ],
                    "summary": "Retrieve details of a key pair.",
                    "type": "KeyPairView"
                },
                {
                    "method": "DELETE",
                    "nickname": "deleteKeyPair",
                    "notes": "If the request is successful, the response body is empty. If the request fails, an ApiResult is returned with details of the error.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair to delete.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Key Pair deleted."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Resource is in use and cannot be deleted."
                        }
                    ],
                    "summary": "Delete a key pair.",
                    "type": "ApiResult"
                }
            ],
            "path": "/keyPairs/sslServer/{id}"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "exportCsr",
                    "notes": "For a successful request, the PEM-encoded CSR file is directly returned as text and the response content type is application/pkcs10. If an error occurs, an ApiResult is returned in JSON format, and the content type is application/json.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Generate a new certificate signing request (CSR) for this key pair.",
                    "type": "string"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "importCsrResponse",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "The CSR response.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "CSRResponse"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "CSR Response imported."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Import a CSR response for this key pair.",
                    "type": "KeyPairView"
                }
            ],
            "path": "/keyPairs/sslServer/{id}/csr"
        },
        {
            "operations": [
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "exportPKCS12File",
                    "notes": "For a successful request, the PKCS12 file is directly returned in binary format and the response content type is application/x-pkcs12. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Parameters for the export request",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "KeyPairExportSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Key Pair downloaded."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "The operation is not permitted, based on the current configuration of the server."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Download the key pair in PKCS12 format.",
                    "type": "void"
                }
            ],
            "path": "/keyPairs/sslServer/{id}/pkcs12"
        },
        {
            "operations": [
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "exportPEMFile",
                    "notes": "For a successful request, the PEM file is directly returned in PEM format and the response content type is application/x-pem-file. In the exported PEM file, the private key is protected with PBES2 encryption and AES. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json. Due to the sensitivity of the password parameter, the method for this operation is POST rather than GET.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Parameters for the export request",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "KeyPairExportSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Key Pair downloaded."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 403,
                            "message": "The operation is not permitted, based on the current configuration of the server."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Download the key pair in PEM format.",
                    "type": "void"
                }
            ],
            "path": "/keyPairs/sslServer/{id}/pem"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "exportCertificateFile",
                    "notes": "For a successful request, the PEM-encoded certificate file is directly returned as text and the response content type is application/x-x509-ca-cert. If an error occurs, an ApiResult is returned in JSON format and the content type is application/json.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the key pair.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        }
                    ],
                    "summary": "Download the certificate from a given key pair.",
                    "type": "string"
                }
            ],
            "path": "/keyPairs/sslServer/{id}/certificate"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSettings",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get the SSL Server Certificate Settings.",
                    "type": "SslServerSettings"
                },
                {
                    "method": "PUT",
                    "nickname": "updateSettings",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Configuration for activation of SSL server certificates.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "SslServerSettings"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "SSL Certificate Settings updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred."
                        }
                    ],
                    "summary": "Update the SSL Server Certificate Settings.",
                    "type": "SslServerSettings"
                }
            ],
            "path": "/keyPairs/sslServer/settings"
        }
    ],
    "basePath": "https://localhost:9999/pf-admin-api/v1",
    "models": {
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "CSRResponse": {
            "description": "Represents a CSR response file.",
            "id": "CSRResponse",
            "properties": {
                "fileData": {
                    "description": "The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value.",
                    "type": "string"
                }
            },
            "required": [
                "fileData"
            ]
        },
        "KeyPairExportSettings": {
            "description": "Settings for exporting a key pair file from the system.",
            "id": "KeyPairExportSettings",
            "properties": {
                "password": {
                    "description": "The password for the key pair file that is created.",
                    "type": "string"
                }
            },
            "required": [
                "password"
            ]
        },
        "KeyPairFile": {
            "description": "Represents the contents of a PKCS12 or PEM file.",
            "id": "KeyPairFile",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "encryptedPassword": {
                    "description": "Encrypted password for the file.",
                    "type": "string"
                },
                "fileData": {
                    "description": "Base-64 encoded PKCS12 or PEM file data. In the case of PEM, the raw (non-base-64) data is also accepted. For PEM, the private key must precede the certificates. In BCFIPS mode, only PEM with PBES2 and AES or Triple DES encryption is accepted and 128-bit salt is required.",
                    "type": "string"
                },
                "format": {
                    "$ref": "KeyPairFileFormat",
                    "description": "Key pair file format. If specified, this field will control what file format is expected, otherwise the format will be auto-detected. In BCFIPS mode, only PEM is supported.",
                    "enum": [
                        "PKCS12",
                        "PEM"
                    ]
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the file. In BCFIPS mode, the password must be at least 14 characters.",
                    "type": "string"
                }
            },
            "required": [
                "fileData",
                "password",
                "encryptedPassword"
            ]
        },
        "KeyPairRotationSettings": {
            "description": "Key Pair Rotation Details",
            "id": "KeyPairRotationSettings",
            "properties": {
                "activationBufferDays": {
                    "description": "Buffer days before key pair expiration for activation of the new key pair.",
                    "format": "int32",
                    "type": "integer"
                },
                "creationBufferDays": {
                    "description": "Buffer days before key pair expiration for creation of a new key pair.",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "keyAlgorithm": {
                    "description": "Key algorithm to be used while creating a new key pair. If this property is unset, the key algorithm of the original key pair will be used. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint.",
                    "type": "string"
                },
                "keySize": {
                    "description": "Key size, in bits. If this property is unset, the key size of the original key pair will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint.",
                    "format": "int32",
                    "type": "integer"
                },
                "signatureAlgorithm": {
                    "description": "Required if the original key pair used SHA1 algorithm. If this property is unset, the default signature algorithm of the original key pair will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint.",
                    "type": "string"
                },
                "validDays": {
                    "description": "Valid days for the new key pair to be created. If this property is unset, the validity days of the original key pair will be used.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "creationBufferDays",
                "activationBufferDays"
            ]
        },
        "KeyPairView": {
            "description": "Key pair details.",
            "id": "KeyPairView",
            "properties": {
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "expires": {
                    "description": "The end date up until which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate.",
                    "type": "string"
                },
                "issuerDN": {
                    "description": "The issuer's distinguished name.",
                    "type": "string"
                },
                "keyAlgorithm": {
                    "description": "The public key algorithm.",
                    "type": "string"
                },
                "keySize": {
                    "description": "The public key size.",
                    "format": "int32",
                    "type": "integer"
                },
                "rotationSettings": {
                    "$ref": "KeyPairRotationSettings",
                    "description": "Key pair rotation settings. Only applicable to self-signed signing key pairs. Automatic key rotation is not currently available for SSL client or SSL server key pairs."
                },
                "serialNumber": {
                    "description": "The serial number assigned by the CA.",
                    "type": "string"
                },
                "sha1Fingerprint": {
                    "description": "SHA-1 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "sha256Fingerprint": {
                    "description": "SHA-256 fingerprint in Hex encoding.",
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "description": "The signature algorithm.",
                    "type": "string"
                },
                "status": {
                    "$ref": "CertificateValidity",
                    "description": "Status of the item.",
                    "enum": [
                        "VALID",
                        "EXPIRED",
                        "NOT_YET_VALID",
                        "REVOKED"
                    ]
                },
                "subjectAlternativeNames": {
                    "description": "The subject alternative names (SAN).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subjectDN": {
                    "description": "The subject's distinguished name.",
                    "type": "string"
                },
                "validFrom": {
                    "description": "The start date from which the item is valid, in ISO 8601 format (UTC).",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The X.509 version to which the item conforms.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "KeyPairViews": {
            "description": "A collection of KeyPairView items.",
            "id": "KeyPairViews",
            "properties": {
                "items": {
                    "description": "The actual list of KeyPairView instances.",
                    "items": {
                        "$ref": "KeyPairView"
                    },
                    "type": "array"
                }
            }
        },
        "NewKeyPairSettings": {
            "description": "Settings for creating a new key pair.",
            "id": "NewKeyPairSettings",
            "properties": {
                "city": {
                    "description": "City.",
                    "type": "string"
                },
                "commonName": {
                    "description": "Common name for key pair subject.",
                    "type": "string"
                },
                "country": {
                    "description": "Country.",
                    "type": "string"
                },
                "cryptoProvider": {
                    "$ref": "CryptoProvider",
                    "description": "Cryptographic Provider.  This is only applicable if Hybrid HSM mode is true.",
                    "enum": [
                        "LOCAL",
                        "HSM"
                    ]
                },
                "id": {
                    "description": "The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.",
                    "type": "string"
                },
                "keyAlgorithm": {
                    "description": "Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint.",
                    "type": "string"
                },
                "keySize": {
                    "description": "Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint.",
                    "format": "int32",
                    "type": "integer"
                },
                "organization": {
                    "description": "Organization.",
                    "type": "string"
                },
                "organizationUnit": {
                    "description": "Organization unit.",
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "description": "Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint.",
                    "type": "string"
                },
                "state": {
                    "description": "State.",
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "description": "The subject alternative names (SAN).",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "validDays": {
                    "description": "Number of days the key pair will be valid for.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "commonName",
                "organization",
                "country",
                "validDays",
                "keyAlgorithm"
            ]
        },
        "ResourceLink": {
            "description": "A reference to a resource.",
            "id": "ResourceLink",
            "properties": {
                "id": {
                    "description": "The ID of the resource.",
                    "type": "string"
                },
                "location": {
                    "description": "A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "SslServerSettings": {
            "description": "Settings for the SSL Server certificate configuration.",
            "id": "SslServerSettings",
            "properties": {
                "activeAdminConsoleCerts": {
                    "description": "The active SSL Server Certificate Key pairs for PF Administrator Console.",
                    "items": {
                        "$ref": "ResourceLink"
                    },
                    "type": "array"
                },
                "activeRuntimeServerCerts": {
                    "description": "The active SSL Server Certificate Key pairs for Runtime Server.",
                    "items": {
                        "$ref": "ResourceLink"
                    },
                    "type": "array"
                },
                "adminConsoleCertRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the default SSL Server Certificate Key pair active for PF Administrator Console."
                },
                "runtimeServerCertRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the default SSL Server Certificate Key pair active for Runtime Server."
                }
            },
            "required": [
                "runtimeServerCertRef",
                "adminConsoleCertRef"
            ]
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/keyPairs/sslServer",
    "swaggerVersion": "1.2"
}