{
    "apiVersion": "v1",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getSettings",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get general OAuth 2.0 Token Exchange Generator settings.",
                    "type": "TokenExchangeGeneratorSettings"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateSettings",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "OAuth 2.0 Token Exchange Generator settings.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "TokenExchangeGeneratorSettings"
                        },
                        {
                            "allowMultiple": false,
                            "description": "External validation will be bypassed when set to true. Default to false.",
                            "name": "bypassExternalValidation",
                            "paramType": "header",
                            "required": false,
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Settings updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update general OAuth 2.0 Token Exchange Generator settings.",
                    "type": "TokenExchangeGeneratorSettings"
                }
            ],
            "path": "/oauth/tokenExchange/generator/settings"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getGroups",
                    "notes": "",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        }
                    ],
                    "summary": "Get list of OAuth 2.0 Token Exchange Generator groups.",
                    "type": "TokenExchangeGeneratorGroups"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "POST",
                    "nickname": "createGroup",
                    "notes": "Create a new OAuth 2.0 Token Exchange Generator group. If the OAuth 2.0 Token Exchange Generator group is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Configuration for new OAuth 2.0 Token Exchange Generator.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "TokenExchangeGeneratorGroup"
                        },
                        {
                            "allowMultiple": false,
                            "description": "External validation will be bypassed when set to true. Default to false.",
                            "name": "bypassExternalValidation",
                            "paramType": "header",
                            "required": false,
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Token Exchange Processor Policy created."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Create a new OAuth 2.0 Token Exchange Generator group.",
                    "type": "TokenExchangeGeneratorGroup"
                }
            ],
            "path": "/oauth/tokenExchange/generator/groups"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getGroup",
                    "notes": "Get an OAuth 2.0 Token Exchange Generator group with the specified ID. A 404 status code is returned for nonexistent IDs.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the OAuth 2.0 Token Exchange Generator group to fetch.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Success."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Find an OAuth 2.0 Token Exchange Generator group by ID.",
                    "type": "TokenExchangeGeneratorGroup"
                },
                {
                    "consumes": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "nickname": "updateGroup",
                    "notes": "Update an OAuth 2.0 Token Exchange Generator group with the matching ID. If the group is not properly configured, a 422 status code is returned along with a list of validation errors that must be corrected. Note: A 404 status code is returned for nonexistent IDs.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of the OAuth 2.0 Token Exchange Generator group to update.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Configuration for updated OAuth 2.0 Token Exchange Generator group.",
                            "name": "body",
                            "paramType": "body",
                            "required": true,
                            "type": "TokenExchangeGeneratorGroup"
                        },
                        {
                            "allowMultiple": false,
                            "description": "External validation will be bypassed when set to true. Default to false.",
                            "name": "bypassExternalValidation",
                            "paramType": "header",
                            "required": false,
                            "type": "boolean"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Token Exchange Processor Policy updated."
                        },
                        {
                            "code": 400,
                            "message": "The request was improperly formatted or contained invalid fields."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found.",
                            "responseModel": "ApiResult"
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Update an OAuth 2.0 Token Exchange Generator group.",
                    "type": "TokenExchangeGeneratorGroup"
                },
                {
                    "method": "DELETE",
                    "nickname": "deleteGroup",
                    "notes": "Delete an OAuth 2.0 Token Exchange Generator group with the specified ID. A 404 status code is returned for nonexistent IDs. Note: If the request succeeds, the response body is empty. If the request fails, an ApiResult is returned with details of the error.",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of OAuth 2.0 Token Exchange Generator group to delete.",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 204,
                            "message": "Token Exchange Processor Policy deleted."
                        },
                        {
                            "code": 404,
                            "message": "Resource not found."
                        },
                        {
                            "code": 422,
                            "message": "Validation error(s) occurred.",
                            "responseModel": "ApiResult"
                        }
                    ],
                    "summary": "Delete an OAuth 2.0 Token Exchange Generator group.",
                    "type": "ApiResult"
                }
            ],
            "path": "/oauth/tokenExchange/generator/groups/{id}"
        }
    ],
    "basePath": "https://localhost:9999/pf-admin-api/v1",
    "models": {
        "ApiResult": {
            "description": "Details on the result of the operation.",
            "id": "ApiResult",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "message": {
                    "description": "Success or error message.",
                    "type": "string"
                },
                "resultId": {
                    "description": "Result identifier.",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "List of validation errors, if any.",
                    "items": {
                        "$ref": "ValidationError"
                    },
                    "type": "array"
                }
            }
        },
        "ResourceLink": {
            "description": "A reference to a resource.",
            "id": "ResourceLink",
            "properties": {
                "id": {
                    "description": "The ID of the resource.",
                    "type": "string"
                },
                "location": {
                    "description": "A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "TokenExchangeGeneratorGroup": {
            "description": "The set of attributes used to configure a OAuth 2.0 Token Exchange Generator group.",
            "id": "TokenExchangeGeneratorGroup",
            "properties": {
                "generatorMappings": {
                    "description": "A list of Token Generator mapping into an OAuth 2.0 Token Exchange requested token type.",
                    "items": {
                        "$ref": "TokenExchangeGeneratorMapping"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The Token Exchange Generator group ID. ID is unique.",
                    "type": "string"
                },
                "name": {
                    "description": "The Token Exchange Generator group name. Name is unique.",
                    "type": "string"
                },
                "resourceUris": {
                    "description": "The list of  resource URI's which map to this Token Exchange Generator group.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "name",
                "generatorMappings"
            ]
        },
        "TokenExchangeGeneratorGroups": {
            "description": "A collection of OAuth 2.0 Token Exchange Generator groups.",
            "id": "TokenExchangeGeneratorGroups",
            "properties": {
                "items": {
                    "description": "The list of OAuth 2.0 Token Exchange Generator groups.",
                    "items": {
                        "$ref": "TokenExchangeGeneratorGroup"
                    },
                    "type": "array"
                }
            }
        },
        "TokenExchangeGeneratorMapping": {
            "description": "A Token Generator mapping into an OAuth 2.0 Token Exchange requested token type.",
            "id": "TokenExchangeGeneratorMapping",
            "properties": {
                "defaultMapping": {
                    "description": "Whether this is the default Token Generator Mapping. Defaults to false if not specified.",
                    "type": "boolean"
                },
                "requestedTokenType": {
                    "description": "The Requested token type",
                    "type": "string"
                },
                "tokenGenerator": {
                    "$ref": "ResourceLink",
                    "description": "The Token Generator used to generate the requested token"
                }
            },
            "required": [
                "requestedTokenType",
                "tokenGenerator"
            ]
        },
        "TokenExchangeGeneratorSettings": {
            "description": "Settings for the OAuth Token Exchange Generator Groups.",
            "id": "TokenExchangeGeneratorSettings",
            "properties": {
                "defaultGeneratorGroupRef": {
                    "$ref": "ResourceLink",
                    "description": "Reference to the default Token Exchange Generator group, if one is defined."
                }
            }
        },
        "ValidationError": {
            "description": "A data input validation error.",
            "id": "ValidationError",
            "properties": {
                "developerMessage": {
                    "description": "Developer-oriented error message, if available.",
                    "type": "string"
                },
                "errorId": {
                    "description": "Error identifier.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "The path to the model field to which the error relates, if one exists.",
                    "type": "string"
                },
                "message": {
                    "description": "User-friendly error description.",
                    "type": "string"
                }
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "resourcePath": "/oauth/tokenExchange/generator",
    "swaggerVersion": "1.2"
}